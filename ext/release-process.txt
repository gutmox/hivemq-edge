Step 1 - Ensure all PRs are merged to master (or release branch) and all tickets are Done
Step 2 - Ensure you checkout the release branch locally (master for now) and pull
Step 3 - Ensure you dev environment is clean
Step 4 - Run hivemq-edge/hivemq-edge/src/test functional tests - - if <> green follow test failure procedure. - This process will take approximately 1-2 minutes
Step 5 - Ensure hivemq-edge-test/ is up to date and run integration test suite - This process will take approximately 18-19 minutes - if <> green follow test failure procedure
Step 6 - Ensure any ~new protocol adapter definitions are added to the "modules" array hivemq-edge/src/resources/hivemq-edge-configuration.json remote config file
Step 7 - Open a terminal in the hivemq-edge-composite and execute the command
        ./gradlew updateAllVersions -Pversion=<new-version> -PprevVersion=<old-version>
        For Example: ./gradlew updateAllVersions -Pversion=2023.7 -PprevVersion=2023.6
Step 8: CHECK: Step 13(b) - Check all the "version" attributes in each of the objects in the "modules" array in the hivemq-edge/src/resources/hivemq-edge-configuration.json file (this surfaces these modules up to legacy installations)
Step 9 - Run a full gradle refresh on your workspace (this may take a few seconds)
Step 10 - Execute "./gradlew :hiveMqEdgeZip" at the terminal whilst in the ./hivemq-edge project
Step 11 - Copy to the hivemq-edge-<version>.zip from the ./hivemq-edge/build/distributions directory to a convenient location on your machine and extract the zip
Step 12 - Ensure that the adapter module jar files are correctly versioned and are located in the ./hivemq-edge-<version>/modules filesystem
Step 13 - Run the extracted distribution from your terminal using the ./hivemq-edge-<version>/bin/run.sh script
Step 14 - Confirm that the log line "INFO  - HiveMQ Edge Version: <version>" appears in the output
Step 15 - Open browser to http://localhost:8080/ and ensure youre redirected to http://localhost:8080/app and the login page
Step 16 - Login using the default credentials
Step 17 - Click Protocol adapters and ensure the built-in adapters have the correct version associated with them (the green tag)
Step 18 - Update the version of the maven import in hivemq-edge-extension-sdk/README.adoc
Step 19 - Update the Quick Start download link in hivemq-edge/README.adoc (REMOVE THIS STEP)
Step 20 - Commit all changes to release branch
Step 21 - IMPORTANT THIS NEEDS TO BE THE FIRST GH ACTION Browse to https://github.com/hivemq/hivemq-edge-extension-sdk and create a new release which reflects the version number e.g. "2023.3"  (Use the generate changelog feature of GH) - await for the GH action "Publish to Maven Central" to finish successfully - if unsuccessful debug.
Step 22 - Browse the nexus repository https://oss.sonatype.org/#nexus-search;gav~com.hivemq~hivemq-edge-extension-sdk~~~~kw,versionexpand to ensure the latest version is listed - This can take up to 22 minutes to propogate
Step 23 - Confirm the binary available at https://repo1.maven.org/maven2/com/hivemq/hivemq-edge-extension-sdk/maven-metadata.xml ensure latest version is set correctly

DO NOT PROCEED PAST THIS POINT UNTIL MAVEN/SONATYPE REFLECTS THE NEW VERSION

Step 24 - Create a new release on https://github.com/hivemq/hivemq-edge using the same versioning pattern e.g. "2023.3" (Use the generate changelog feature of GH) - await for the GH actions (Publish To Docker & CI Check) to complete - if unsuccessful debug.

Step 25 - Confirm new docker image available on docker hub (install and run ensure new version reflected in log)
Step 26 - Paste the changelog into the release channel on slack with a notification of release.


=======================
Test failure procedure
=======================
A test failure ~always blocks a release.
Step 1 - Identify the failing test and do a cursary error message check for obvious failure cause (bad network etc.)
Step 2 - Rerun the failed test in isolation to ensure the failure wasnt a fine timing issue
Step 3 - If green, run entire suite again to confirm full green run. If red, raise the issue with devs -

! Red test blocks release.
